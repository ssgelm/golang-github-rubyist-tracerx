Source: golang-github-rubyist-tracerx
Section: devel
Priority: extra
Maintainer: Debian Go Packaging Team <pkg-go-maintainers@lists.alioth.debian.org>
Uploaders: Stephen Gelman <ssgelm@gmail.com>
Build-Depends: debhelper (>= 10),
               dh-golang,
               golang-any
Standards-Version: 3.9.8
Homepage: https://github.com/rubyist/tracerx
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-go/packages/golang-github-rubyist-tracerx.git
Vcs-Git: https://anonscm.debian.org/git/pkg-go/packages/golang-github-rubyist-tracerx.git
XS-Go-Import-Path: github.com/rubyist/tracerx

Package: golang-github-rubyist-tracerx-dev
Architecture: all
Depends: ${shlibs:Depends},
         ${misc:Depends}
Description: Output tracing information in your Go app based on environment variables
 tracerx Tracerx is a simple tracing package that logs messages depending
 on environment variables.  It is very much inspired by git's GIT_TRACE
 mechanism.
 .
 GoDoc (https://godoc.org/github.com/rubyist/tracerx) Installation
 .
   go get github.com/rubyist/tracerx
 .
 Example ```go tracerx.DefaultKey = "FOO" tracerx.Printf("send message")
 .
 tracerx.PrintfKey("BAR", "do a thing")
 .
 t := time.Now() // Do some stuff tracerx.PerformanceSince("BAR",
 "command x", t) ```
 .
 This example will send tracing output based on the environment variables
 FOO_TRACE and BAR_TRACE.
 .
 The values control where the tracing is output as follows:
 .
 .
 unset, 0, or "false":   no output 1, 2:                   stderr
 absolute path:          output will be written to the file 3 - 10:
 output will be written to that file descriptor
 .
 .
 If an associated BAR_TRACE_PERFORMANCE is set to 1 or "true", the
 PerformanceSince line will output timing information.
 .
 Keys can also be disabled. See the GoDoc for full API
 documentation.  Bugs, Issues, Feedback Right here on GitHub:
 https://github.com/rubyist/tracerx (https://github.com/rubyist/tracerx)
